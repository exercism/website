```ts
// i18n
export default {
  "sizeTag.xs": "xs",
  "sizeTag.s": "s",
  "sizeTag.m": "m",
  "sizeTag.l": "l",
  "sizeTag.xl": "xl",
  "trackInfo.for": "for",
  "newTag.new": "New",
  "moduleTag.analyzer": "Analyzer",
  "moduleTag.representer": "Representer",
  "moduleTag.learningExercise": "Learning Exercise",
  "moduleTag.practiceExercise": "Practice Exercise",
  "moduleTag.testRunner": "Test Runner",
  "moduleTag.trackGenerators": "Track Generators",
  "moduleTag.trackConcepts": "Track Concepts",
  "actionIcon.action": "Action: {{action}}"
}

// modified_files
// === file: ../components/contributing/tasks-list/task/SizeTag.tsx ===
// i18n-key-prefix: sizeTag
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TaskSize } from '../../../types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const SizeTag = ({ size }: { size?: TaskSize }): JSX.Element => {
  const { t } = useAppTranslation('components/contributing/tasks-list/task')

  switch (size) {
    case 'tiny':
      return <div className="size-tag">{t('sizeTag.xs')}</div>
    case 'small':
      return <div className="size-tag">{t('sizeTag.s')}</div>
    case 'medium':
      return <div className="size-tag">{t('sizeTag.m')}</div>
    case 'large':
      return <div className="size-tag">{t('sizeTag.l')}</div>
    case 'massive':
      return <div className="size-tag">{t('sizeTag.xl')}</div>
    default:
      return <div className="size-tag blank" />
  }
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/TrackInfo.tsx ===
// i18n-key-prefix: trackInfo
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TrackIcon } from '../../../common'
import { Task } from '../../../types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const TrackInfo = ({ track }: Pick<Task, 'track'>): JSX.Element => {
  const { t } = useAppTranslation('components/contributing/tasks-list/task')
  return (
    <div className="track">
      <div className="for">{t('trackInfo.for')}</div>
      <TrackIcon iconUrl={track.iconUrl} title={track.title} />
      <div className="title">{track.title}</div>
    </div>
  )
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/KnowledgeIcon.tsx ===
// i18n-key-prefix: knowledgeIcon
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TaskKnowledge } from '../../../types'

export const KnowledgeIcon = ({
  knowledge,
}: {
  knowledge: TaskKnowledge
}): JSX.Element => {
  switch (knowledge) {
    case 'none':
      return (
        <>
          <div className="dot" />
          <div className="dot" />
          <div className="dot" />
        </>
      )
    case 'elementary':
      return (
        <>
          <div className="dot filled" />
          <div className="dot" />
          <div className="dot" />
        </>
      )
    case 'intermediate':
      return (
        <>
          <div className="dot filled" />
          <div className="dot filled" />
          <div className="dot" />
        </>
      )
    case 'advanced':
      return (
        <>
          <div className="dot filled" />
          <div className="dot filled" />
          <div className="dot filled" />
        </>
      )
  }
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/KnowledgeTag.tsx ===
// i18n-key-prefix: knowledgeTag
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TaskKnowledge } from '../../../types'
import { GraphicalIcon } from '../../../common'
import { KnowledgeIcon } from './KnowledgeIcon'

export const KnowledgeTag = ({
  knowledge,
}: {
  knowledge?: TaskKnowledge
}): JSX.Element => {
  switch (knowledge) {
    case 'none':
      return (
        <div className="knowledge-tag">
          <GraphicalIcon icon="task-knowledge" />
          <KnowledgeIcon knowledge={knowledge} />
          <div className="sr-only">Knowledge: none</div>
        </div>
      )
    case 'elementary':
      return (
        <div className="knowledge-tag">
          <GraphicalIcon icon="task-knowledge" />
          <KnowledgeIcon knowledge={knowledge} />
          <div className="sr-only">Knowledge: elementary</div>
        </div>
      )
    case 'intermediate':
      return (
        <div className="knowledge-tag">
          <GraphicalIcon icon="task-knowledge" />
          <KnowledgeIcon knowledge={knowledge} />
          <div className="sr-only">Knowledge: intermediate</div>
        </div>
      )
    case 'advanced':
      return (
        <div className="knowledge-tag">
          <GraphicalIcon icon="task-knowledge" />
          <KnowledgeIcon knowledge={knowledge} />
          <div className="sr-only">Knowledge: advanced</div>
        </div>
      )
    default:
      return <div className="knowledge-tag blank" />
  }
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/TypeIcon.tsx ===
// i18n-key-prefix: typeIcon
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TaskType } from '../../../types'
import { GraphicalIcon } from '../../../common'

export const TypeIcon = ({ type }: { type: TaskType }): JSX.Element => {
  return <GraphicalIcon icon={`task-type-${type}`} />
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/TrackType.tsx ===
// i18n-key-prefix: trackType
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { Task, TaskType as TaskTypeProps } from '../../../types'
import { TrackInfo } from './TrackInfo'
import { TaskType } from './TaskType'

export const TrackType = ({
  track,
  type,
}: Partial<Pick<Task, 'track'>> & { type?: TaskTypeProps }): JSX.Element => {
  return (
    <div className="track-type">
      {track ? <TrackInfo track={track} /> : null}
      {type ? <TaskType type={type} /> : null}
    </div>
  )
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/TaskType.tsx ===
// i18n-key-prefix: taskType
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { TaskType as TaskTypeProps } from '../../../types'
import { TypeIcon } from './TypeIcon'

export const TaskType = ({ type }: { type: TaskTypeProps }): JSX.Element => {
  return (
    <div className="type c-tag --small">
      <TypeIcon type={type} />
      {type}
    </div>
  )
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/ModuleTag.tsx ===
// i18n-key-prefix: moduleTag
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { Icon } from '../../../common'
import { TaskModule } from '../../../types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const ModuleTag = ({ module }: { module?: TaskModule }): JSX.Element => {
  const { t } = useAppTranslation('components/contributing/tasks-list/task')
  switch (module) {
    case 'analyzer':
      return <Icon icon="automation" alt={t('moduleTag.analyzer')} className="module" />
    case 'representer':
      return (
        <Icon
          icon="task-module-representer"
          alt={t('moduleTag.representer')}
          className="module"
        />
      )
    case 'concept-exercise':
      return (
        <Icon
          icon="concept-exercise"
          alt={t('moduleTag.learningExercise')}
          className="module"
        />
      )
    case 'practice-exercise':
      return (
        <Icon icon="exercises" alt={t('moduleTag.practiceExercise')} className="module" />
      )
    case 'test-runner':
      return <Icon icon="tests" alt={t('moduleTag.testRunner')} className="module" />
    case 'generator':
      return (
        <Icon
          icon="task-module-generator"
          alt={t('moduleTag.trackGenerators')}
          className="module"
        />
      )
    case 'concept':
      return (
        <Icon
          icon="task-module-concept"
          alt={t('moduleTag.trackConcepts')}
          className="module"
        />
      )
    default:
      return <div className="module blank" />
  }
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/NewTag.tsx ===
// i18n-key-prefix: newTag
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { GraphicalIcon } from '../../../common'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const NewTag = (): JSX.Element => {
  const { t } = useAppTranslation('components/contributing/tasks-list/task')
  return (
    <div className="new">
      <GraphicalIcon icon="stars" />
      {t('newTag.new')}
    </div>
  )
}

// === end file ===
// === file: ../components/contributing/tasks-list/task/ActionIcon.tsx ===
// i18n-key-prefix: actionIcon
// i18n-namespace: components/contributing/tasks-list/task
import React from 'react'
import { GraphicalIcon, Icon } from '../../../common'
import { TaskAction } from '../../../types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const ActionIcon = ({
  action,
}: {
  action?: TaskAction
}): JSX.Element => {
  const { t } = useAppTranslation('components/contributing/tasks-list/task')
  return (
    <div className="action-icon">
      {action ? (
        <Icon icon={`task-action-${action}`} alt={t('actionIcon.action', { action })} />
      ) : (
        <GraphicalIcon icon={`task-action`} />
      )}
    </div>
  )
}

// === end file ===
```