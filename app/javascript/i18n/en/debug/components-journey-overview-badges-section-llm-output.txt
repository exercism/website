```ts
// i18n
export default {
  "badgeSummary.youHaveNoBadges": "You have no badges.",
  "badgeSummary.badgesSummary": "You have {{badges}}.",
  "badgeSummary.badge": "badge"
}

// modified_files
// === file: ../components/journey/overview/badges-section/BadgeSummary.tsx ===
// i18n-key-prefix: badgeSummary
// i18n-namespace: components/journey/overview/badges-section
import pluralize from 'pluralize'
import React from 'react'
import { BadgeList, BadgeRarity } from '../../../types'
import { toSentence } from '../../../../utils/toSentence'
import { useAppTranslation } from '@/i18n/useAppTranslation'

const BADGE_RARITIES: BadgeRarity[] = [
  'legendary',
  'ultimate',
  'rare',
  'common',
]

export const BadgeSummary = ({
  badges,
}: {
  badges: BadgeList
}): JSX.Element => {
  const { t } = useAppTranslation('components/journey/overview/badges-section')

  const parts = BADGE_RARITIES.map<string>((rarity: BadgeRarity) => {
    const badgesWithRarity = badges.filter(rarity)

    return badgesWithRarity.length > 0
      ? `${badgesWithRarity.length} ${rarity} ${pluralize(
          t('badgeSummary.badge'),
          badgesWithRarity.length
        )}`
      : ''
  }).filter((part) => part.length > 0)

  return (
    <p className="text-p-large">
      {t(parts.length == 0 ? 'badgeSummary.youHaveNoBadges' : 'badgeSummary.badgesSummary', {badges: toSentence(parts)})}
    </p>
  )
}

// === end file ===
```