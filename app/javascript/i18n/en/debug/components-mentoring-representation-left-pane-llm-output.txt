```ts
// i18n
export default {
  "representationIterationView.solutionNumber": "Solution #{{solutionNumber}}",
  "representationIterationView.occurrence": "{{number}} occurrence",
  "representationIterationView.occurrences": "{{number}} occurrences",
  "representationIterationView.lastOccurred": "Last occurred {lastOccurred}",
  "representationInfo.feedbackOnSolution": "You’re giving feedback on a solution set for",
  "leftPane.exerciseInTrack": "{{exerciseTitle}} in {{trackTitle}}"
}

// modified_files
// === file: ../components/mentoring/representation/left-pane/RepresentationIterationView.tsx ===
// i18n-key-prefix: representationIterationView
// i18n-namespace: components/mentoring/representation/left-pane
import React from 'react'
import { fromNow } from '../../../../utils/date'
import { pluralizeWithNumber } from '../../../../utils/pluralizeWithNumber'
import { ResultsZone } from '../../../ResultsZone'
import { RepresentationData } from '../../../types'
import { MostPopularTag } from '../../automation/MostPopularTag'
import { FilePanel } from '../../session/FilePanel'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const IterationView = ({
  representationData,
}: {
  representationData: RepresentationData
}): JSX.Element => {
  return (
    <React.Fragment>
      <SimpleIterationHeader
        solutionNumber={representationData.id}
        appearsFrequently={representationData.appearsFrequently}
        lastOccurred={fromNow(representationData.lastSubmittedAt)}
        occurrenceNumber={representationData.numSubmissions}
      />
      <ResultsZone isFetching={false}>
        <FilePanel
          files={representationData.files}
          language={representationData.track.highlightjsLanguage}
          indentSize={2}
          instructions={representationData.instructions}
          testFiles={representationData.testFiles}
        />
      </ResultsZone>
    </React.Fragment>
  )
}

export function SimpleIterationHeader({
  solutionNumber,
  occurrenceNumber,
  lastOccurred,
  appearsFrequently,
}: {
  solutionNumber: number
  occurrenceNumber: number
  lastOccurred: string
  appearsFrequently: boolean
}): JSX.Element {
  const { t } = useAppTranslation('components/mentoring/representation/left-pane')

  return (
    <header className="iteration-header">
      <div>
        <div className="flex flex-row items-center text-15 text-textColor1 font-semibold leading-170">
          {t('representationIterationView.solutionNumber', { solutionNumber })} {appearsFrequently && <MostPopularTag />}
        </div>
        <div className="text-14 text-textColor6 font-medium leading-160">
          {pluralizeWithNumber(occurrenceNumber, 'occurrence', t)} · {t('representationIterationView.lastOccurred', { lastOccurred })}
        </div>
      </div>
      <div></div>
    </header>
  )
}

// === end file ===

// === file: ../components/mentoring/representation/left-pane/RepresentationInfo.tsx ===
// i18n-key-prefix: representationInfo
// i18n-namespace: components/mentoring/representation/left-pane
import React from 'react'
import { TrackIcon, Avatar } from '../../../common'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export default function RepresentationInfo({
  track,
  exercise,
}: {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  track: any
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  exercise: any
}): JSX.Element {
  const { t } = useAppTranslation('components/mentoring/representation/left-pane')

  return (
    <>
      <TrackIcon
        title={track.title}
        className={'!w-[32px] !h-[32px]'}
        iconUrl={track.iconUrl}
      />
      <div className="student">
        <Avatar src={exercise.iconUrl} />
        <div className="info">
          <div className="exercise">
            {t('representationInfo.feedbackOnSolution')}
          </div>
          <div className="handle">
            {t('leftPane.exerciseInTrack', { exerciseTitle: exercise.title, trackTitle: track.title })}
          </div>
        </div>
      </div>
    </>
  )
}

// === end file ===

// === file: ../components/mentoring/representation/left-pane/LeftPane.tsx ===
// i18n-key-prefix: leftPane
// i18n-namespace: components/mentoring/representation/left-pane
import React from 'react'
import { CloseButton } from '../../session/CloseButton'
import { IterationView } from './RepresentationIterationView'
import RepresentationInfo from './RepresentationInfo'
import { CompleteRepresentationData, RepresentationData } from '../../../types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export type PanesProps = {
  representation: RepresentationData
} & Pick<CompleteRepresentationData, 'links'>

export function LeftPane({ representation, links }: PanesProps): JSX.Element {
  const { t } = useAppTranslation('components/mentoring/representation/left-pane')

  return (
    <>
      <header className="discussion-header">
        <CloseButton url={links.back} />
        <RepresentationInfo
          exercise={representation.exercise}
          track={representation.track}
        />
      </header>
      <IterationView representationData={representation} />
    </>
  )
}

// === end file ===
```