```ts
// i18n
export default {
  "exerciseUpdateForm.header": "See what's changed on <ExerciseIcon iconUrl=\"{{iconUrl}}\" />{{exerciseTitle}}",
  "exerciseUpdateForm.warning": "By updating to the latest version, your solution may fail the tests and need to be updated.",
  "exerciseUpdateForm.updateExercise": "Update exercise",
  "exerciseUpdateForm.dismiss": "Dismiss",
  "diffViewer.errorMessage": "Unable to render diff",
}

// modified_files
// === file: ../components/modals/exercise-update-modal/ExerciseUpdateForm.tsx ===
import React, { createContext, useState } from 'react'
import { useMutation } from '@tanstack/react-query'
import { sendRequest } from '@/utils/send-request'
import { redirectTo } from '@/utils/redirect-to'
import { typecheck } from '@/utils/typecheck'
import { GraphicalIcon, ExerciseIcon } from '@/components/common'
import { FormButton } from '@/components/common/FormButton'
import { ErrorBoundary, ErrorMessage } from '@/components/ErrorBoundary'
import { SolutionForStudent } from '@/components/types'
import { Tab, TabContext } from '@/components/common/Tab'
import { ExerciseDiff } from '../ExerciseUpdateModal'
import { DiffViewer } from './DiffViewer'
import { useAppTranslation } from '@/i18n/useAppTranslation'

const DEFAULT_ERROR = new Error('Unable to update exercise')

export const TabsContext = createContext<TabContext>({
  current: '',
  switchToTab: () => null,
})

export const ExerciseUpdateForm = ({
  diff,
  onCancel,
}: {
  diff: ExerciseDiff
  onCancel: () => void
}): JSX.Element => {
  const [tab, setTab] = useState(diff.files[0].relativePath)
  const { t } = useAppTranslation('components/modals/exercise-update-modal')

  const {
    mutate: mutation,
    status,
    error,
  } = useMutation<SolutionForStudent>({
    mutationFn: async () => {
      const { fetch } = sendRequest({
        endpoint: diff.links.update,
        method: 'PATCH',
        body: null,
      })

      return fetch.then((json) =>
        typecheck<SolutionForStudent>(json, 'solution')
      )
    },
    onSuccess: (solution) => {
      redirectTo(solution.privateUrl)
    },
  })

  return (
    <>
      <header className="header">
        <h2>
          {t('exerciseUpdateForm.header', {
            exerciseTitle: diff.exercise.title,
            iconUrl: diff.exercise.iconUrl,
          })}
        </h2>
      </header>
      <TabsContext.Provider
        value={{
          current: tab,
          switchToTab: (id: string) => setTab(id),
        }}
      >
        <div className="tabs">
          {diff.files.map((file) => (
            <Tab
              id={file.relativePath}
              context={TabsContext}
              key={file.relativePath}
            >
              {file.relativePath}
            </Tab>
          ))}
        </div>

        {diff.files.map((file) => (
          <Tab.Panel
            id={file.relativePath}
            context={TabsContext}
            key={file.relativePath}
          >
            <DiffViewer diff={file.diff} />
          </Tab.Panel>
        ))}
      </TabsContext.Provider>
      <div className="warning">
        {t('exerciseUpdateForm.warning')}
      </div>
      <form data-turbo="false">
        <FormButton
          type="button"
          onClick={() => mutation()}
          status={status}
          className="btn-primary btn-m"
        >
          <GraphicalIcon icon="reset" />
          <span>{t('exerciseUpdateForm.updateExercise')}</span>
        </FormButton>
        <FormButton
          type="button"
          onClick={onCancel}
          status={status}
          className="dismiss-btn"
        >
          {t('exerciseUpdateForm.dismiss')}
        </FormButton>
        <ErrorBoundary resetKeys={[status]}>
          <ErrorMessage error={error} defaultError={DEFAULT_ERROR} />
        </ErrorBoundary>
      </form>
    </>
  )
}

// === end file ===

// === file: ../components/modals/exercise-update-modal/DiffViewer.tsx ===
import React, { useEffect, useRef } from 'react'
import { Diff2HtmlUI } from 'diff2html/lib/ui/js/diff2html-ui-base.js'
import HighlightJS from 'highlight.js'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const DiffViewer = ({ diff }: { diff: string }): JSX.Element => {
  const contentRef = useRef<HTMLDivElement>(null)
  const { t } = useAppTranslation('components/modals/exercise-update-modal')

  useEffect(() => {
    if (!contentRef.current) {
      return
    }

    const configuration = {
      drawFileList: false,
      fileListToggle: false,
      fileListStartVisible: false,
      fileContentToggle: false,
    }

    const diff2htmlUi = new Diff2HtmlUI(
      contentRef.current,
      diff,
      configuration,
      HighlightJS
    )
    try {
      diff2htmlUi.draw()
    } catch (error) {
      console.error(t('diffViewer.errorMessage'), error)
    }
  }, [diff, t])

  return <div className="c-diff" ref={contentRef} />
}

// === end file ===
```