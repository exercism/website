```ts
// i18n
export default {
  "perksModalButton.continueToPartner": "Continue to {{websiteDomain}}",
  "perksModalButton.close": "Close",
  "perksExternalModalButton.claimPerk": "Claim this Perk with an Exercism account!",
  "perksExternalModalButton.exercismIsNonProfit": "Exercism is a not-for-profit organisation. We provide world-class education, a great community, and Perks from our partners. Join Exercism today. It's free!",
  "perksExternalModalButton.signUp": "Sign up",
  "perksExternalModalButton.logIn": "Log in"
}

// modified_files
// === file: ../components/perks/PerksModalButton.tsx ===
// i18n-key-prefix: perksModalButton
// i18n-namespace: components/perks
import React, { useCallback, useState } from 'react'
import { Modal } from '@/components/modals'
import CopyToClipboardButton from '@/components/common/CopyToClipboardButton'
import { useAppTranslation } from '@/i18n/useAppTranslation'

type PerkKeys = 'claimUrl' | 'offerSummaryHtml' | 'offerDetails' | 'voucherCode'
export type PerksModalButtonProps = {
  text: string
  perk: Record<PerkKeys, string>
  partner: Record<'websiteDomain', string>
}
export default function PerksModalButton({
  data,
}: {
  data: PerksModalButtonProps
}): JSX.Element {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const { t } = useAppTranslation('components/perks')

  const closeModal = useCallback(() => {
    setIsModalOpen(false)
  }, [])

  const openModal = useCallback(() => {
    setIsModalOpen(true)
  }, [])

  const { text, perk, partner } = data

  return (
    <>
      <button className="btn-m btn-primary" onClick={openModal}>
        {text}
      </button>

      <Modal open={isModalOpen} onClose={closeModal}>
        <PerkModal perk={perk} partner={partner} onClose={closeModal} />
      </Modal>
    </>
  )
}

type PerkModalProps = Pick<PerksModalButtonProps, 'perk' | 'partner'> & {
  onClose: () => void
}

function PerkModal({ perk, partner, onClose }: PerkModalProps) {
  const { t } = useAppTranslation('components/perks')

  return (
    <div className="max-w-[500px]">
      <h2
        dangerouslySetInnerHTML={{ __html: perk.offerSummaryHtml }}
        className="text-p-xlarge font-semibold mb-8"
      />
      <p className="text-p-base mb-20">{perk.offerDetails}</p>
      <div className="mb-20">
        <CopyToClipboardButton textToCopy={perk.voucherCode} />
      </div>

      <div className="flex gap-12">
        <a href={perk.claimUrl} className="btn-m btn-primary">
          {t('perksModalButton.continueToPartner', {
            websiteDomain: partner.websiteDomain,
          })}
        </a>
        <button className="btn-m btn-enhanced" onClick={onClose}>
          {t('perksModalButton.close')}
        </button>
      </div>
    </div>
  )
}

// === end file ===

// === file: ../components/perks/PerksExternalModalButton.tsx ===
// i18n-key-prefix: perksExternalModalButton
// i18n-namespace: components/perks
import React, { useCallback, useState } from 'react'
import { Modal } from '../modals'
import { useAppTranslation } from '@/i18n/useAppTranslation'

type PerkKeys = 'offerSummaryHtml' | 'offerDetails'
type Links = 'logIn' | 'signUp'
export type PerksExternalModalButtonProps = {
  text: string
  perk: Record<PerkKeys, string>
  links: Record<Links, string>
}
export default function PerksExternalModalButton({
  data,
}: {
  data: PerksExternalModalButtonProps
}): JSX.Element {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const { t } = useAppTranslation('components/perks')

  const closeModal = useCallback(() => {
    setIsModalOpen(false)
  }, [])

  const openModal = useCallback(() => {
    setIsModalOpen(true)
  }, [])

  const { text, perk, links } = data

  return (
    <>
      <button className="btn-m btn-primary" onClick={openModal}>
        {text}
      </button>

      <Modal open={isModalOpen} onClose={closeModal}>
        <PerkExternalModal perk={perk} links={links} onClose={closeModal} />
      </Modal>
    </>
  )
}

type PerkExternalModalProps = Pick<
  PerksExternalModalButtonProps,
  'perk' | 'links'
> & {
  onClose: () => void
}

function PerkExternalModal({ links }: PerkExternalModalProps) {
  const { t } = useAppTranslation('components/perks')
  return (
    <div className="max-w-[500px] flex flex-col items-center text-center">
      <h2 className="text-p-xlarge font-semibold mb-8">
        {t('perksExternalModalButton.claimPerk')}
      </h2>
      <p className="text-p-base mb-20">
        {t('perksExternalModalButton.exercismIsNonProfit')}
      </p>
      <div className="flex gap-12">
        <a href={links.signUp} className="btn-m btn-primary">
          {t('perksExternalModalButton.signUp')}
        </a>
        <a href={links.logIn} className="btn-m btn-enhanced">
          {t('perksExternalModalButton.logIn')}
        </a>
      </div>
    </div>
  )
}

// === end file ===
```