```ts
// i18n
export default {
  "insiderBubble.insidersOnly": "Insiders only",
  "confirmationModal.confirm": "Confirm",
  "confirmationModal.cancel": "Cancel"
}

// modified_files
// === file: ../components/settings/github-syncer/common/InsiderBubble.tsx ===
// i18n-key-prefix: insiderBubble
// i18n-namespace: components/settings/github-syncer/common
import GraphicalIcon from '@/components/common/GraphicalIcon'
import React from 'react'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export function InsiderBubble() {
  const { t } = useAppTranslation('components/settings/github-syncer/common')
  return (
    <div className="flex items-center gap-8 rounded-100 font-medium bg-bootcamp-light-purple text-purple border-1 border-purple py-4 px-8 whitespace-nowrap">
      <GraphicalIcon icon="insiders" height={16} width={16} />
      {t('insiderBubble.insidersOnly')}
    </div>
  )
}

// === end file ===

// === file: ../components/settings/github-syncer/common/SectionHeader.tsx ===
// i18n-key-prefix: sectionHeader
// i18n-namespace: components/settings/github-syncer/common
import React from 'react'
import { InsiderBubble } from './InsiderBubble'

export function SectionHeader({ title }: { title: string }) {
  return (
    <div className="!mb-6 flex justify-start items-center gap-12">
      <h2 className="!mb-0">{title}</h2>
      <InsiderBubble />
    </div>
  )
}

// === end file ===

// === file: ../components/settings/github-syncer/common/ConfirmationModal.tsx ===
// i18n-key-prefix: confirmationModal
// i18n-namespace: components/settings/github-syncer/common
import Modal, { ModalProps } from '@/components/modals/Modal'
import { assembleClassNames } from '@/utils/assemble-classnames'
import React, { useCallback } from 'react'
import { useAppTranslation } from '@/i18n/useAppTranslation'

type ConfirmationModalProps = Omit<ModalProps, 'className'> & {
  title: string
  description?: string
  confirmLabel?: string
  declineLabel?: string
  onConfirm: () => void
  onDecline?: () => void
  confirmButtonClass?: string
  isConfirmButtonDisabled?: boolean
}

export const ConfirmationModal = ({
  title,
  description,
  confirmLabel = 'Confirm',
  declineLabel = 'Cancel',
  onConfirm,
  onDecline,
  onClose,
  confirmButtonClass = 'btn-warning',
  isConfirmButtonDisabled = false,
  ...props
}: ConfirmationModalProps): JSX.Element => {
  const { t } = useAppTranslation('components/settings/github-syncer/common')

  const handleClose = useCallback(() => {
    onDecline?.()
    onClose()
  }, [onClose, onDecline])

  const handleSubmit = useCallback(
    (e: React.FormEvent) => {
      e.preventDefault()
      onConfirm()
    },
    [onConfirm]
  )

  return (
    <Modal className="m-generic-confirmation" onClose={handleClose} {...props}>
      <h3>{title}</h3>
      {description && <p>{description}</p>}
      <form data-turbo="false" onSubmit={handleSubmit} className="buttons">
        <button
          type="submit"
          className={assembleClassNames('btn-s', confirmButtonClass)}
        >
          {t('confirmationModal.confirm')}
        </button>
        <button
          type="button"
          disabled={isConfirmButtonDisabled}
          className="btn-enhanced btn-s"
          onClick={handleClose}
        >
          {t('confirmationModal.cancel')}
        </button>
      </form>
    </Modal>
  )
}

// === end file ===
```