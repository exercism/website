```ts
// i18n
export default {
  "solutionCommentTextArea.howCanMentorHelpYou": "How can a mentor help you with this solution?",
  "solutionCommentTextArea.giveMentorStartingPoint": "Give your mentor a starting point for the conversation. This will be your first comment during the session. Markdown is permitted.",
  "trackObjectivesTextArea.whatAreYouHopingToLearn": "What are you hoping to learn from this track?",
  "trackObjectivesTextArea.tellOurMentorsAboutYourBackground": "Tell our mentors a little about your programming background and what you're aiming to learn from {{trackTitle}}."
}

// modified_files
// === file: ../components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents/SolutionCommentTextArea.tsx ===
// i18n-key-prefix: solutionCommentTextArea
// i18n-namespace: components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents
import React from 'react'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const SolutionCommentTextArea = React.forwardRef<
  HTMLTextAreaElement,
  unknown
>((_, ref) => {
  const { t } = useAppTranslation('components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents')
  return (
    <div className="question">
      <label htmlFor="request-mentoring-form-solution-comment">
        {t('solutionCommentTextArea.howCanMentorHelpYou')}
      </label>
      <p id="request-mentoring-form-solution-description">
        {t('solutionCommentTextArea.giveMentorStartingPoint')}
      </p>
      <textarea
        ref={ref}
        id="request-mentoring-form-solution-comment"
        required
        minLength={20}
        aria-describedby="request-mentoring-form-solution-description"
      />
    </div>
  )
})

// === end file ===

// === file: ../components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents/TrackObjectivesTextArea.tsx ===
// i18n-key-prefix: trackObjectivesTextArea
// i18n-namespace: components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents
import React from 'react'
import type { MentorSessionTrack } from '@/components/types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export const TrackObjectivesTextArea = React.forwardRef<
  HTMLTextAreaElement,
  { defaultValue: string; track: Pick<MentorSessionTrack, 'title'> }
>(({ track, defaultValue }, ref) => {
  const { t } = useAppTranslation('components/student/mentoring-session/mentoring-request/MentoringRequestFormComponents')
  return (
    <div className="question">
      <label htmlFor="request-mentoring-form-track-objectives">
        {t('trackObjectivesTextArea.whatAreYouHopingToLearn')}
      </label>
      <p id="request-mentoring-form-track-description">
        {t('trackObjectivesTextArea.tellOurMentorsAboutYourBackground', { trackTitle: track.title })}
      </p>
      <textarea
        ref={ref}
        id="request-mentoring-form-track-objectives"
        required
        minLength={20}
        aria-describedby="request-mentoring-form-track-description"
        defaultValue={defaultValue}
      />
    </div>
  )
})

// === end file ===
```