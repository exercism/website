```ts
// i18n
export default {
  "studentTooltip.trackObjectives": "Track objectives",
  "studentTooltip.locatedIn": "Located in",
  "studentTooltip.mentoredTimes": "Mentored <strong>{{numTotalDiscussions}}</strong> {{pluralize}}",
  "studentTooltip.time_one": "time",
  "studentTooltip.time_other": "times",
  "studentTooltip.ofWhichByYou": ", of which <strong>{{numDiscussionsWithMentor}}</strong> {{pluralize}} by you",
  "studentTooltip.byYou_one": "time",
  "studentTooltip.byYou_other": "times",
  "studentTooltip.neverByYou": " but <strong>never</strong> by you",
  "studentTooltip.firstMentoringSession": "This will be their <strong>first</strong> mentoring session",
  "studentTooltip.favorited": "Favorited",
  "studentTooltip.unableToLoadInformation": "Unable to load information"
}

// modified_files
// === file: ../components/tooltips/StudentTooltip.tsx ===
import React from 'react'
import { Student } from '../types'
import { useRequestQuery } from '../../hooks/request-query'
import { FetchingBoundary } from '../FetchingBoundary'
import { Avatar, GraphicalIcon, Icon, Reputation } from '../common'
import pluralize from 'pluralize'
import { StudentTooltipSkeleton } from '../common/skeleton/skeletons/StudentTooltipSkeleton'
import { useAppTranslation } from '@/i18n/useAppTranslation'
import { Trans } from 'react-i18next'

const DEFAULT_ERROR = new Error('Unable to load information')

const StudentTooltip = React.forwardRef<
  HTMLDivElement,
  React.HTMLProps<HTMLDivElement> & { endpoint: string }
>(({ endpoint, ...props }, ref) => {
  const { data, error, status, t } = useAppTranslation('components/tooltips/StudentTooltip.tsx')

  return (
    <div className="c-student-tooltip" {...props} ref={ref}>
      <FetchingBoundary
        status={status}
        error={error}
        defaultError={DEFAULT_ERROR}
        LoadingComponent={() => <StudentTooltipSkeleton />}
      >
        {data ? (
          /* If we want the track we need to add a pivot to this,
           * and use track={data.track}*/
          <>
            <div className="header">
              <Avatar src={data.student.avatarUrl} />
              <div className="info">
                <div className="handle">{data.student.handle}</div>
                {data.student.name ? (
                  <div className="name">{data.student.name}</div>
                ) : null}
              </div>
              <Reputation
                value={data.student.reputation}
                type="primary"
                size="small"
              />
            </div>
            {data.student.trackObjectives ? (
              <div className="track-objectives">
                <h3>{t('studentTooltip.trackObjectives')}</h3>
                <p>{data.student.trackObjectives}</p>
              </div>
            ) : null}
            {data.student.location ? (
              <div className="location">
                <Icon icon="location" alt={t('studentTooltip.locatedIn')} />
                {data.student.location}
              </div>
            ) : null}
            {data.student.numTotalDiscussions > 0 ? (
              <div className="previous-sessions">
                <Trans
                  i18nKey="studentTooltip.mentoredTimes"
                  values={{ numTotalDiscussions: data.student.numTotalDiscussions, pluralize: pluralize('time', data.student.numTotalDiscussions) }}
                  components={{ strong: <strong /> }}
                  defaults="Mentored <strong>{{numTotalDiscussions}}</strong> {{pluralize}}"
                  count={data.student.numTotalDiscussions}
                />
                {data.student.numDiscussionsWithMentor > 0 ? (
                  <>
                    <Trans
                      i18nKey="studentTooltip.ofWhichByYou"
                      values={{ numDiscussionsWithMentor: data.student.numDiscussionsWithMentor, pluralize: pluralize('time', data.student.numDiscussionsWithMentor) }}
                      components={{ strong: <strong /> }}
                      defaults=", of which <strong>{{numDiscussionsWithMentor}}</strong> {{pluralize}} by you"
                      count={data.student.numDiscussionsWithMentor}
                    />
                  </>
                ) : (
                  <>
                    {' '}
                    <Trans
                      i18nKey="studentTooltip.neverByYou"
                      components={{ strong: <strong /> }}
                      defaults=" but <strong>never</strong> by you"
                    />
                  </>
                )}
              </div>
            ) : (
              <div className="previous-sessions">
                <Trans
                  i18nKey="studentTooltip.firstMentoringSession"
                  components={{ strong: <strong /> }}
                  defaults="This will be their <strong>first</strong> mentoring session"
                />
              </div>
            )}
            {data.student.isFavorited ? (
              <div className="favorited">
                <GraphicalIcon icon="gold-star" />
                {t('studentTooltip.favorited')}
              </div>
            ) : null}
          </>
        ) : (
          <span>{t('studentTooltip.unableToLoadInformation')}</span>
        )}
      </FetchingBoundary>
    </div>
  )
})

export default StudentTooltip

// end file ===
```