```ts
// i18n
export default {
  "communityVideos.communityVideos": "Community Videos",
  "communityVideos.walkthroughsFromPeople": " Walkthroughs from people using Exercism ",
  "communityVideos.wantYourVideoFeatured": "Want your video featured here?",
  "communityVideos.submitItHere": "Submit it here.",
  "videoCredits.exercismProfile": "Exercism Profile",
  "videoCredits.youTubeChannel": "YouTube Channel",
  "communityVideoModal.postedBy": "Posted by ",
  "communityVideo.seeVideo": "see video",
  "communityVideoFooter.wantYourVideoFeatured": "Want your video featured here?",
  "communityVideoFooter.submitItHere": "Submit it here"
}

// modified_files
// === file: ../components/track/dig-deeper-components/community-videos/CommunityVideos.tsx ===
// i18n-key-prefix: communityVideos
// i18n-namespace: components/track/dig-deeper-components/community-videos
import React, { useContext, useState } from 'react'
import { UploadVideoModal } from '@/components/modals'
import type { CommunityVideosProps } from '@/components/types'
import { NoContentYet, SectionHeader } from '..'
import { DigDeeperDataContext } from '../../DigDeeper'
import { CommunityVideo, CommunityVideosFooter } from './CommunityVideo'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export function CommunityVideos({ videos }: CommunityVideosProps): JSX.Element {
  const [uploadModalOpen, setUploadModalOpen] = useState(false)
  const { t } = useAppTranslation('components/track/dig-deeper-components/community-videos')

  const { exercise } = useContext(DigDeeperDataContext)
  return (
    <div>
      <SectionHeader
        title={t('communityVideos.communityVideos')}
        description={t('communityVideos.walkthroughsFromPeople')}
        icon="community-video-gradient"
        className="mb-24"
      />
      {videos.length > 0 ? (
        <>
          {videos.map((video) => (
            <CommunityVideo
              key={video.createdAt + video.submittedBy.handle}
              video={video}
            />
          ))}
          <CommunityVideosFooter onClick={() => setUploadModalOpen(true)} />
        </>
      ) : (
        <div className="flex items-start">
          <NoContentYet
            exerciseTitle={exercise.title}
            contentType="Community Videos"
          >
            {t('communityVideos.wantYourVideoFeatured')}&nbsp;
            <button onClick={() => setUploadModalOpen(true)} className="flex">
              <span className="underline">{t('communityVideos.submitItHere')}.</span>&nbsp;
            </button>
          </NoContentYet>
        </div>
      )}

      <UploadVideoModal
        isOpen={uploadModalOpen}
        onClose={() => setUploadModalOpen(false)}
      />
    </div>
  )
}

// === end file ===

// === file: ../components/track/dig-deeper-components/community-videos/VideoCredits.tsx ===
// i18n-key-prefix: videoCredits
// i18n-namespace: components/track/dig-deeper-components/community-videos
import React from 'react'
import { Avatar, Icon } from '@/components/common'
import type { CommunityVideoType } from '@/components/types'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export function VideoCredits({
  author,
  links,
}: Pick<CommunityVideoType, 'author' | 'links'>): JSX.Element {
  const { t } = useAppTranslation('components/track/dig-deeper-components/community-videos')
  return (
    <div className="mb-24 py-16 px-32 text-textColor6 flex justify-between items-center border-1 border-borderLight2 rounded-16 shadow-sm md:flex-row flex-col">
      <div className="grid grid-rows-[24px_24px] grid-cols-[48px_auto] place-items-start gap-x-16">
        {author && (
          <Avatar
            className="row-span-2 col-span-1 h-[48px] w-[48px]"
            src={author.avatarUrl}
          />
        )}
        {author && (
          <div className="font-semibold text-textColor1 text-18 leading-160 col-span-1 row-span-2 self-center whitespace-nowrap">
            {author.name}&nbsp;
            <span className="text-14 text-textColor6">@{author.handle}</span>
          </div>
        )}
        {/* <div className="text-18 row-span-1 col-span-1 self-center">
          405 subscribers
        </div> */}
      </div>

      <div className="underline font-semibold leading-150 text-14 flex items-center mt-8 md:mt-0">
        {author && author.links.profile && (
          <a href={author.links.profile} className="mr-32">
            {t('videoCredits.exercismProfile')}
          </a>
        )}

        {links.channel.length > 0 && (
          <a
            href={links.channel}
            target="_blank"
            rel="noreferrer"
            className="flex"
          >
            {t('videoCredits.youTubeChannel')}&nbsp;
            <Icon
              className="filter-textColor6 ml-12"
              icon={'new-tab'}
              alt={'open in new tab'}
            />
          </a>
        )}
      </div>
    </div>
  )
}

// === end file ===

// === file: ../components/track/dig-deeper-components/community-videos/CommunityVideoModal.tsx ===
// i18n-key-prefix: communityVideoModal
// i18n-namespace: components/track/dig-deeper-components/community-videos
import React from 'react'
import dayjs from 'dayjs'
import { Modal } from '@/components/modals'
import type { CommunityVideoType } from '@/components/types'
import { VideoCredits } from './VideoCredits'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export function CommunityVideoModal({
  isOpen,
  onClose,
  video,
}: {
  isOpen: boolean
  onClose: () => void
  video: CommunityVideoType
}): JSX.Element {
  const { t } = useAppTranslation('components/track/dig-deeper-components/community-videos')

  return (
    <Modal
      open={isOpen}
      closeButton
      onClose={onClose}
      className="items-center"
      ReactModalClassName="max-w-[800px] p-0"
    >
      <h2 className="md:text-h2 text-h5 mb-24 text-center">{video.title}</h2>
      {/* reponsive top-padding for 16:9 videos */}
      <div
        className="relative overflow-hidden pb-[56.25%] mb-24"
        style={{ width: '100%' }}
      >
        <iframe
          src={video.links.embed}
          frameBorder="0"
          className="rounded-16 mx-auto absolute top-0 bottom-0 left-0 right-0"
          style={{ width: '100%', height: '100%' }}
        ></iframe>
      </div>

      {video.author && (
        <VideoCredits links={video.links} author={video.author} />
      )}
      <div className="text-center text-textColor6 leading-160 text-16">
        {t('communityVideoModal.postedBy')}{' '}
        {video.submittedBy.links.profile ? (
          <a href={video.submittedBy.links.profile} className="underline">
            @{video.submittedBy.handle}
          </a>
        ) : (
          `@${video.submittedBy.handle}`
        )}{' '}
        &middot; {dayjs(video.createdAt).format('D MMM YYYY')}
      </div>
    </Modal>
  )
}

// === end file ===

// === file: ../components/track/dig-deeper-components/community-videos/CommunityVideo.tsx ===
// i18n-key-prefix: communityVideo
// i18n-namespace: components/track/dig-deeper-components/community-videos
import React, { useState } from 'react'
import { Avatar, Icon } from '@/components/common'
import { CommunityVideoType } from '@/components/types'
import { CommunityVideoModal } from './CommunityVideoModal'
import { useAppTranslation } from '@/i18n/useAppTranslation'

export function CommunityVideo({
  video,
}: {
  video: CommunityVideoType
}): JSX.Element {
  const [isOpen, setIsOpen] = useState(false)
  const { t } = useAppTranslation('components/track/dig-deeper-components/community-videos')

  return (
    <div className="flex">
      <button
        onClick={() => setIsOpen(true)}
        className="flex items-center bg-backgroundColorA shadow-sm rounded-8 px-20 py-16 mb-16 grow"
      >
        <img
          style={{ objectFit: 'cover', height: '80px', width: '143px' }}
          className="mr-20 rounded-8"
          src={video.links.thumbnail}
          alt="thumbnail"
        />
        <div className="flex flex-col mr-auto">
          <h5 className="text-h5 mb-8 text-left">{video.title}</h5>
          <div className="flex items-center">
            {video.author && (
              <Avatar
                src={video.author.avatarUrl}
                className="mr-8 h-[24px] w-[24px]"
              />
            )}
            <span className="font-semibold text-textColor6 leading-150 text-14">
              {video.author && video.author.name}
            </span>
          </div>
        </div>

        <Icon
          className="filter-textColor6 h-[24px] w-[24px]"
          icon={'expand'}
          alt={t('communityVideo.seeVideo')}
        />
      </button>
      <CommunityVideoModal
        isOpen={isOpen}
        video={video}
        onClose={() => setIsOpen(false)}
      />
    </div>
  )
}

export function CommunityVideosFooter({
  onClick,
}: {
  onClick: () => void
}): JSX.Element {
  const { t } = useAppTranslation('components/track/dig-deeper-components/community-videos')
  return (
    <footer className="text-p-small text-textColor6">
      {t('communityVideoFooter.wantYourVideoFeatured')}
      <button onClick={onClick} className="underline">
        {t('communityVideoFooter.submitItHere')}
      </button>
      .
    </footer>
  )
}

// === end file ===
```