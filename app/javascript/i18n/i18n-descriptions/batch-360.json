{
  "testSummary.passed": "**Functional Purpose**: Label for a test that passed\n**UI Location**: Editor → Tests tab → Individual Test Summary header → Status indicator\n**When Users See This**: When a test run has completed and this specific test succeeded\n**Technical Context**: Derived from `test.status`.\n**Current English**: \"Passed\"",
  "testSummary.failed": "**Functional Purpose**: Label for a test that failed\n**UI Location**: Editor → Tests tab → Individual Test Summary header → Status indicator\n**When Users See This**: When a test run has completed and this specific test failed\n**Technical Context**: Derived from `test.status`.\n**Current English**: \"Failed\"",
  "testSummary.test": "**Functional Purpose**: Label preceding the test's index number\n**UI Location**: Editor → Tests tab → Individual Test Summary header → Test index\n**When Users See This**: When viewing the summary of any test\n**Technical Context**: Accompanies `test.index` which must remain unchanged.\n**Current English**: \"Test\"",
  "testSummary.codeRun": "**Functional Purpose**: Heading for the section displaying the test code that was run\n**UI Location**: Editor → Tests tab → Individual Test Summary → Details section\n**When Users See This**: When a user expands a test summary that includes test code\n**Technical Context**: Heading for the code snippet in a `<pre><code>` block.\n**Current English**: \"Code Run\"",
  "testSummary.yourOutput": "**Functional Purpose**: Heading for the section displaying the output from the user's code\n**UI Location**: Editor → Tests tab → Individual Test Summary → Details section\n**When Users See This**: When a user expands a test summary that includes user output\n**Technical Context**: Heading for the output snippet in a `<pre>` block.\n**Current English**: \"Your Output\"",
  "testContentWrapper.fileNotFound": "**Functional Purpose**: Error message when a requested test file cannot be found\n**UI Location**: Editor → Tests tab (internal error handling)\n**When Users See This**: If there is an internal issue where a test file referenced by its filename is not in the `testFiles` array\n**Technical Context**: Thrown when `testFiles.find((f) => f.filename === filename)` returns undefined. The variable `filename` must remain unchanged.\n**Current English**: \"File not found\""
}
