#challenge-12in23-page
  %section.top-section
    .lg-container
      .flex
        .mr-auto{ class: 'max-w-[860px]' }
          .font-semibold.leading-150.flex.items-center.mb-4{ style: 'color: var(--colorPurpleToBrightPurple)' }
            %span.emoji.mr-6 ðŸ“†
            = t('.top_section.month_intro')
          %h1.text-h1.mb-8= t('.top_section.title')
          %p.text-p-xlarge.mb-20
            = t('.top_section.description')

          .shadow-baseZ1.grid.grid-cols-2.gap-20.py-20.px-20.rounded-8.bg-backgroundColorB
            .flex-shrink
              %h2.text-h4.mb-2= t('.top_section.overview_video.title')
              %p.text-p-base.mb-8
                = t('.top_section.overview_video.description')
              %p.text-p-base
                = t('.top_section.overview_video.cta')

            .rhs
              %div{ class: 'w-[100%] max-w-[500px]' }
                = render ReactComponents::Common::YoutubePlayer.new('_w5Q3Tc1kqY', 'challenge#show')

          - tracks = Track.where(slug: User::Challenges::FeaturedExercisesProgress12In23::DECEMBER_TRACKS)
          %h2.text-h3.mt-32.mb-2= t('.learn_earn.title')
          %p.text-p-large.mb-20
            = t('.learn_earn.description')
            - if tracks.any?(&:course?)
              = t('.learn_earn.syllabus_hint_html', concepts_icon: graphical_icon("concepts", css_class: 'w-[14px] h-[14px] filter-purple inline mx-[-4px]'))

          .grid.grid-cols-6.gap-12.mb-32
            - tracks.each do |track|
              = link_to track, class: 'rounded-12 shadow-base hover:shadow-baseZ1 bg-backgroundColorA flex flex-col p-12 text-center relative' do
                - if track.course?
                  .rounded-circle.bg-backgroundColorA.p-4.shadow-baseZ1{ class: 'absolute top-[-7px] right-[-7px]' }
                    = graphical_icon "concepts", css_class: 'w-[14px] h-[14px] filter-purple'
                = image_tag track.icon_url, class: 'mb-8'
                .text-h6= track.title

          %p.text-p-large.mb-12
            = t('.recommended_exercises.intro')
          %ul.text-p-large.mb-12

            %li.mb-2
              = image_tag "#{Exercism.config.website_icons_host}/exercises/all-your-base.svg", class: "w-[25px] inline"
              %strong.font-semibold= t('.recommended_exercises.all_your_base.title')
              = t('.recommended_exercises.all_your_base.description')
            %li.mb-2
              = image_tag "#{Exercism.config.website_icons_host}/exercises/flatten-array.svg", class: "w-[25px] inline"
              %strong.font-semibold= t('.recommended_exercises.flatten_array.title')
              = t('.recommended_exercises.flatten_array.description')
            %li.mb-2
              = image_tag "#{Exercism.config.website_icons_host}/exercises/queen-attack.svg", class: "w-[25px] inline"
              %strong.font-semibold= t('.recommended_exercises.queen_attack.title')
              = t('.recommended_exercises.queen_attack.description')
            %li.mb-2
              = image_tag "#{Exercism.config.website_icons_host}/exercises/dnd-character.svg", class: "w-[25px] inline"
              %strong.font-semibold= t('.recommended_exercises.dnd_character.title')
              = t('.recommended_exercises.dnd_character.description')
            %li.mb-2
              = image_tag "#{Exercism.config.website_icons_host}/exercises/run-length-encoding.svg", class: "w-[25px] inline"
              %strong.font-semibold= t('.recommended_exercises.run_length_encoding.title')
              = t('.recommended_exercises.run_length_encoding.description')

          %h2.text-h3.mt-32.mb-4= t('.learn_from_others.title')
          %p.text-p-large.mb-12.c-highlight-links
            = t('.learn_from_others.description_html', twitch_channel_link: link_to(t('.learn_from_others.twitch_channel_link_text'), 'https://twitch.tv/exercismlive', class: 'underline'), youtube_channel_link: link_to(t('.learn_from_others.youtube_channel_link_text'), 'https://www.youtube.com/exercism_videos?sub_confirmation=1', class: 'underline'))
            = t('.learn_from_others.schedule_hint')

          %h2.text-h3.mt-32.mb-4= t('.join_conversation.title')
          %ul.text-p-large.list-disc.pl-16.c-highlight-links
            %li.mb-4
              = t('.join_conversation.description_html', forums_link: link_to(t('.join_conversation.forums_link_text'), 'https://forum.exercism.org/tag/12in23'), discord_link: link_to(t('.join_conversation.discord_link_text'), 'https://exercism.org/r/discord'), hashtag: tag.strong(t('.join_conversation.hashtag_text'), class: 'font-semibold'))

        .ml-80{ class: 'max-w-[450px]' }
          .bg-backgroundColorD.rounded-8.py-16.px-24.mb-24.border-1.border-borderColor7
            %h2.text-h4.mb-4= t('.side_section.streaming_schedule.title')
            %p.text-p-base.mb-12.c-highlight-links
              = t('.side_section.streaming_schedule.description_html', twitch_channel_link: link_to(t('.side_section.streaming_schedule.twitch_channel_link_text'), 'https://twitch.tv/exercismlive', class: 'underline'))
              %strong.font-semibold= t('.side_section.streaming_schedule.utc_notice')

            %ul.text-p-base.list-disc.pl-16
              - StreamingEvent.next_5.each do |event|
                %li.mb-4
                  .font-medium.text-textColor6.text-14.leading-100
                    = format_datetime(event.starts_at)
                  %strong.font-semibold.text-textColor2= event.title


          .bg-backgroundColorD.rounded-8.py-16.px-24.mb-24.border-1.border-borderColor7
            %h2.text-h4.mb-4= t('.side_section.how_it_works.title')
            %p.text-p-base.mb-12
              = t('.side_section.how_it_works.description')
            .grid.grid-cols-2.gap-12
              = link_to "https://youtu.be/e15lRHLJQKI", class: 'bg-backgroundColorB p-8 shadow-smZ1 rounded-5 relative' do
                = graphical_icon "video-play", css_class: '!absolute top-[40px] w-[30px] left-[50%] ml-[-15px]', style: "filter: var(--white-filter) drop-shadow(0px 0px 6px black)"
                = image_tag "https://assets.exercism.org/images/thumbnails/yt-12in23-feb-update.jpg", alt: t('.side_section.how_it_works.video_thumbnail_alt'), class: 'mb-8 block block w-fill rounded-5'
                .text-center.text-h6= t('.side_section.how_it_works.video1_title')

              = link_to "https://youtu.be/2refhxXqePI", class: 'bg-backgroundColorB p-8 shadow-smZ1 rounded-5 relative' do
                = graphical_icon "video-play", css_class: '!absolute top-[40px] w-[30px] left-[50%] ml-[-15px]', style: "filter: var(--white-filter) drop-shadow(0px 0px 6px black)"
                = image_tag "https://assets.exercism.org/images/thumbnails/yt-official-12in23-calendar.jpg", alt: t('.side_section.how_it_works.video_thumbnail_alt'), class: 'mb-8 block w-fill rounded-5'
                .text-center.text-h6= t('.side_section.how_it_works.video2_title')

            %p.text-p-small.text-center.mt-20.bg-backgroundColorA.rounded-8.py-8.px-12.font-medium
              = t('.side_section.how_it_works.progress_hint')

          .bg-backgroundColorD.rounded-8.py-16.px-24.mb-24.border-1.border-borderColor7
            %h2.text-h4.mb-4= t('.side_section.donate.title')
            %p.text-p-base.mb-12
              = t('.side_section.donate.description')
            = link_to t('.side_section.donate.button_text'), donate_path, class: 'btn btn-primary'

          .bg-backgroundColorD.rounded-8.py-16.px-24.border-1.border-borderColor7.mt-24
            %h2.text-h4.mb-4= t('.side_section.year_long_badge.title')
            %p.text-p-base.mb-12
              = t('.side_section.year_long_badge.description')

              = t('.side_section.year_long_badge.forum_hint_html', forum_post_link: link_to(t('.side_section.year_long_badge.forum_post_link_text'), 'https://forum.exercism.org/t/new-12in23-badge-for-completing-all-the-things/4183', class: 'font-semibold text-linkColor'))

            - if @badge_progress_exercises.present?
              %h2.text-h6.mt-20.mb-12
                = t('.side_section.year_long_badge.published_exercises_title')
                .inline.text-14= t('.side_section.year_long_badge.published_exercises_count', earned_count: @badge_progress_exercise_earned_count, total_count: @badge_progress_exercise_count)
              .grid.grid-cols-5.gap-12
                - @badge_progress_exercises.each do |exercise_progress|
                  - if exercise_progress[:earned_for].present?
                    = link_to track_exercise_path(exercise_progress[:earned_for], exercise_progress[:slug]), class: "relative block" do
                      = image_tag "#{Exercism.config.website_icons_host}/exercises/#{exercise_progress[:slug]}.svg", class: "w-100", title: t('.side_section.year_long_badge.solved_in_track', track_name: exercise_progress[:earned_for])
                      = icon "completed-check-circle", t('.side_section.year_long_badge.completed_icon_label'), css_class: "w-[16px] !absolute right-[2px] top-[2px]"
                  - else
                    = image_tag "#{Exercism.config.website_icons_host}/exercises/#{exercise_progress[:slug]}.svg", class: "w-100 opacity-[0.7] grayscale", title: t('.side_section.year_long_badge.solve_exercise_in_tracks', exercise_slug: exercise_progress[:slug], track_names: exercise_progress[:track_slugs].to_sentence(last_word_connector: ', or ', two_words_connector: ', or '))
            - else
              %h2.text-h6.mt-20= t('.side_section.year_long_badge.no_solutions_yet')

  %article
    .md-container
      .flex.text-center.flex-col.items-center
        %h1.text-h1.mb-16= t('.progress_section.title')
        %p.text-p-xlarge
          = t('.progress_section.description1')
        %p.text-p-large.cta
          = t('.progress_section.description2')

      .grid.grid-cols-4.gap-32.mx-auto
        - @track_counts.each do |track_id, count|
          - track = @tracks[track_id]
          = link_to track_path(track), class: "relative text-center shadow-baseZ1 bg-backgroundColorA py-16 px-24 rounded-8 flex flex-col items-center border-2 #{count >= 5 ? 'border-successColor' : 'border-transparent'}" do
            = image_tag track.icon_url, alt: '', class: "c-icon c-track-icon h-[48px] w-[48px] mb-8"
            .text-h4.mb-20= track.title
            - if count >= 5
              = icon "completed-check-circle", t('.progress_section.track_completed_icon_label'), width: 24, height: 24, css_class: "!absolute top-[-12px] right-[-12px]"
              .progress
              .count= t('.progress_section.exercises_completed', count: count)
            - else
              %progress.progress-bar{ value: count, max: 5 }
              .count= t('.progress_section.exercises_progress', count: count)

        - num_placeholders = 12 - @track_counts.size
        - if num_placeholders.positive?
          - num_placeholders.times do
            .shadow-base.bg-backgroundColorA.rounded-8.flex.flex-col.items-center.justify-center.opacity-60{ class: 'min-h-[175px]' }
              .text-h0{ class: "opacity-[0.2]" } ?
