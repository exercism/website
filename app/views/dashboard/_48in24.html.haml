- week = ((Time.zone.today - Date.new(2024, 1, 15)) / 7).ceil
- featured_exercise = User::Challenges::FeaturedExercisesProgress48In24::EXERCISES.find { |e| e[:week] == week }
- return unless featured_exercise

- generic_exercise = GenericExercise.for(featured_exercise[:slug])
- return unless generic_exercise

.flex.flex-col.items-start.mb-12
  = link_to challenge_path('48in24'), class: 'text-adaptivePurple font-semibold leading-150 flex items-center mb-4' do
    %span.emoji.mr-6 ðŸ“†
    = t('.week_of_challenge', week: week)
  %h2.text-h3= t('.featuring_exercise', exercise_title: featured_exercise[:title])
  %p.text-p-base.mb-6
    = featured_exercise[:learning_opportunity]

  - if generic_exercise.deep_dive_youtube_id
    .text-p-base.mb-8.font-medium.text-textColor2= t('.watch_deep_dive')
    %div{ class: 'w-[100%] md:max-w-[500px]' }
      = render ReactComponents::Common::YoutubePlayer.new(generic_exercise.deep_dive_youtube_id, 'dashboard')

= link_to challenge_path('48in24'), class: "btn btn-secondary btn-base mb-28 bg-backgroundColor1" do
  %span= t('.explore_all_link')
  = graphical_icon "arrow-right"
