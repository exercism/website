- require_stylesheet "insiders"

- content_for :canonical_url, insiders_url
#page-insiders
  .gradient-container.pt-20.md:pt-40.pb-32
    .lg-container
      .top.grid.grid-cols-1.md:grid-cols-2.gap-48
        .top-lhs
          %h1.text-h1.flex.items-center.gap-12.mb-4.sm:mb-8.lg:text-48.text-30.sm:text-32
            = t('.insiders_title')
            = graphical_icon "insiders", css_class: 'h-[32px] md:h-[60px] w-[32px] md:w-[60px]'
          %h3.text-h3.mb-16.leading-140
            = t('.hero_subtitle_html').html_safe
          %p.text-p-xlarge.mb-12
            = t('.donations_message_html').html_safe
          %p.text-p-xlarge.mb-24
            = t('.features_summary_html').html_safe

          - if current_user.present?
            = render ReactComponents::Insiders::InsidersStatus.new

        .top-rhs.self-center
          = vimeo_embed("855534271?h=97d3a4c8c2")

          %p.text-p-base.italic.mt-8
            = t('.non_profit_info')

  .gradient-container.py-56
    .lg-container
      %h2.text-h2.mb-4.text-center= t('.benefits_heading')
      %p.text-p-large.mb-32.text-center= t('.benefits_tagline')
      .features
        - @features.each do |feature|
          .feature
            = graphical_icon feature[:icon], css_class: feature[:filter] ? "filter-yellowPrompt" : ""
            %h4= feature[:title]
            %p= feature[:desc]

  .gradient-container.py-56
    .lg-container
      %h2.text-h2.mb-4.text-center= t('.exclusive_content_heading')
      %p.text-p-large.mb-32.text-center= t('.exclusive_content_tagline')
      .grid.grid-cols-3.gap-32
        - @videos.each do |_, _, img|
          = image_tag "https://assets.exercism.org/images/thumbnails/#{img}", class: 'block w-100 shadow-md rounded-8 border-1 border-purple'

  .gradient-container.py-32
    .sm-container
      %h2.text-center.text-h2= t('.support_exercism_heading')
      %p.text-center.text-p-large.mb-2
        = t('.donations_needed_html', amount: "$25,000").html_safe
      %p.text-p-large.text-center.font-medium.text-white.mb-16
        = t('.join_insiders_call_to_action')
      .border-1.border-borderColor6.shadow-smZ1.rounded-8.p-32.w-100.mb-32
        .c-progress
          - target = 25_000.0
          - actual = Payments::Subscription.active_total_per_month_in_dollars
          - progress = [1, actual / target].min * 100
          .bar{ style: "width:#{progress}%" }

          .current-icon{ style: "left:calc(#{progress.round}% - 18px)" }
          .actual-number.hidden{ class: "md:block", style: "left:calc(#{progress.round}% - 160px)" }
            = t('.monthly_donations', amount: number_to_currency(actual.round, precision: 0))

          .target-icon
            = graphical_icon "party-popper"
          .goal
            = t('.sustainable_goal', amount: "$25,000")

  .gradient-container.faqs.py-56
    .lg-container
      %h2.text-h1.mb-40.text-center= t('.faqs_heading')
      .flex.flex-col.gap-24.mx-auto{ class: "max-w-[940px]" }
        %details{ open: true }
          %summary= t('.faq_access.question')
          %p.mb-12
            = t('.faq_access.answer_part1_html', codebase_link: 'https://github.com/exercism/website/tree/main/app/commands/user/insiders_status/determine_eligibility_status.rb').html_safe
          %p.mb-4= t('.faq_access.lifetime_access_intro')
          %ul.mb-16
            %li= t('.faq_access.lifetime_criterion_founder')
            %li= t('.faq_access.lifetime_criterion_supermentor')
            %li= t('.faq_access.lifetime_criterion_reputation')
            %li= t('.faq_access.lifetime_criterion_donation')

          %p.mb-4= t('.faq_access.temporary_access_intro')
          %ul.mb-16
            %li= t('.faq_access.temporary_criterion_monthly_donation')
            %li= t('.faq_access.temporary_criterion_maintainer')
            %li= t('.faq_access.temporary_criterion_recent_reputation')
            %li= t('.faq_access.temporary_criterion_legacy_donation')
            %li= t('.faq_access.temporary_criterion_one_off_donation')

          %p
            = t('.faq_access.support_html', forum_issue_link: 'https://forum.exercism.org').html_safe

        %details
          %summary= t('.faq_paypal_github.question')
          = t('.faq_paypal_github.answer_html', forum_issue_link: 'https://forum.exercism.org').html_safe

        %details
          %summary= t('.faq_cost.question')
          %p= t('.faq_cost.answer')

        %details
          %summary= t('.faq_premium.question')
          %p= t('.faq_premium.answer')

        %details
          %summary= t('.faq_reputation.question')
          %p= t('.faq_reputation.answer_html', docs_link: 'https://exercism.org/docs/using/product/reputation#h-acquisition-of-reputation', journey_link: journey_path).html_safe
