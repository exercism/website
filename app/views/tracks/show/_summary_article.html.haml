%article.summary-article
  .lg-container.container
    .lhs
      - unless user_track.tutorial_exercise_completed?
        = render "tracks/show/start_track_section", track:

      %section.progress-chart.mb-24
        %h2
          - if user_track.completed_percentage.zero?
            You&apos;ve just started the #{track.title} track.
            %strong Good luck, adventurer!
          - elsif user_track.completed_percentage == 100
            Amazing - you've completed the track!!
            %strong What an achievement! 👏
          - else
            You&apos;re
            %em #{user_track.completed_percentage}%
            through the #{track.title} track.
            %strong= user_track_completed_percentage_text(user_track)

        .c-progress
          .bar{ style: "width: #{user_track.completed_percentage}%" }
          -# TODO: Disable this on SRs?
          = track_icon track
          .completed-icon
            = icon "completed-check-circle", "Completed", css_class: "completed"

        = render ReactComponents::Student::ExerciseStatusChart.new(track)

        .key
          .item
            .c-ed.--completed
            .status Completed
            .count= user_track.num_completed_exercises
          .item
            .c-ed.--in_progress
            .status In-progress
            .count= user_track.num_in_progress_exercises
          .item
            .c-ed.--available
            .status Available
            .count= user_track.num_available_exercises
          .item
            .c-ed.--locked
            .status Locked
            .count= user_track.num_locked_exercises
          .item.total
            .status Total Exercises
            .count= user_track.num_exercises


        - boxes = []

        - if user_track.num_completed_exercises.positive?
          - boxes << render("tracks/show/stats_box_completed_exercises", track:, user_track:)

        - if track.course? && !user_track.practice_mode?
          - if user_track.num_concepts_learnt.positive?
            - boxes << render("tracks/show/stats_box_learnt_concepts", track:, user_track:)
          - else
            - boxes << render("tracks/show/stats_box_available_exercises", track:, user_track:)

          - if user_track.num_concepts_mastered.positive?
            - boxes << render("tracks/show/stats_box_mastered_concepts", track:, user_track:)

        - else
          - if user_track.num_in_progress_exercises.positive?
            - boxes << render("tracks/show/stats_box_in_progress_exercises", track:, user_track:)

          - if user_track.num_available_exercises.positive?
            - boxes << render("tracks/show/stats_box_available_exercises", track:, user_track:)

        - if user_track.num_completed_exercises.zero? && user_track.num_locked_exercises.positive?
          - boxes << render("tracks/show/stats_box_locked_exercises", track:, user_track:)

      - boxes = boxes.first(3)
      .grid.gap-24{ class: "grid-cols-#{boxes.size}" }
        - boxes.each do |box|
          = raw box

      %section#trophy-cabinet.trophy-cabinet
        %h2.text-h4.mb-2.text-center
          #{track.title} Trophy Cabinet
        %p.text-p-base.text-textColor6.mb-20.text-center
          Unlock for achievements as you progress through the track.
          = link_to "Learn more", "https://forum.exercism.org/t/track-trophies-are-live/6957"

        = render ReactComponents::Track::Trophies.new(track, user_track.user)

    .rhs.flex.flex-col.gap-32
      - if track.intro_video_youtube_slug
        %section
          %h3.text-h4.mb-4 A Brief Introduction to #{track.title}
          %p.text-p-base.mb-12 Dig into #{track.title} with Erik as he explores its main features and solves an interesting exercise.

          %div{ class: 'w-[100%] max-w-[500px]' }
            .c-youtube-container
              %iframe{ width: "560", height: "315", src: "https://www.youtube-nocookie.com/embed/#{track.intro_video_youtube_slug}", title: "YouTube video player", frameborder: "0", allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", allowfullscreen: true }

      - if forum_threads.present?
        %section
          %h3.text-h4.mb-12 From the Forum…
          .flex.flex-col.gap-8.mb-20
            - forum_threads.each do |thread|
              = link_to thread.url, class: 'flex items-start bg-backgroundColorA px-16 py-12 shadow-base hover:shadow-smZ1 rounded-5 mb-8' do
                = image_tag thread.poster_avatar_url, alt: "", class: 'mr-8 h-[32px] w-[32px] rounded-circle'
                .flex.flex-col.mr-auto
                  %h5.text-h6= thread.title
                  .text-textColor6.leading-150
                    Latest by #{thread.poster_username}
          = render ViewComponents::ProminentLink.new("Explore the #{track.title} Forum", "https://forum.exercism.org/c/programming/#{track.slug}", with_bg: true, external: true, css_class: 'mb-12')

      - if docs.present?
        %section
          %h3.text-h4.mb-6 Stuck? Explore our docs…
          %ul.text-p-base.list-disc.ml-20
            - docs.each do |doc|
              %li.mb-2= link_to doc.nav_title, track_doc_path(doc.track, doc)

      - if last_8_weeks_counts.any?(&:positive?)
        %section
          %h3.text-h4.mb-4 Your momentum
          %p.text-p-base.mb-12 Consistency is the key to progress. Set yourself a realistic target to try and aim for each week, then track your last 8 weeks here.
          .stats-box
            .weekly-count
              .text
                .count= (last_8_weeks_counts.sum / 8.0).round(1)
                %h3 Avg. exercises completed per week

              = ReactComponents::Common::ProgressGraph.new(last_8_weeks_counts, 70, 145)




