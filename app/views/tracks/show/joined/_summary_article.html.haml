%article.summary-article
  .lg-container.container
    .lhs
      - unless user_track.tutorial_exercise_completed?
        = render "tracks/show/joined/start_track_section", track: track

      %section.progress-chart
        %h2
          - if user_track.completed_percentage.zero?
            Youâ€™ve just started the #{track.title} track.
            %strong Good luck, adventurer!
          - else
            Youâ€™re
            %em #{user_track.completed_percentage}%
            through the #{track.title} track.
            %strong Keep it up! ðŸš€

        .c-progress
          .bar{ style: "width: #{user_track.completed_percentage}%" }
          / TODO: Disable this on SRs?
          = track_icon track
          .completed-icon
            = icon "completed-check-circle", "Completed", css_class: "completed"

        = render ReactComponents::Student::ExerciseStatusChart.new(track)

        .key
          .item
            .c-ed.--completed
            .status Completed
            .count= user_track.num_completed_exercises
          .item
            .c-ed.--in_progress
            .status In-progress
            .count= user_track.num_in_progress_exercises
          .item
            .c-ed.--available
            .status Available
            .count= user_track.num_available_exercises
          .item
            .c-ed.--locked
            .status Locked
            .count= user_track.num_locked_exercises
          .item.total
            .status Total Exercises
            .count= user_track.num_exercises

      - if user_track.tutorial_exercise_completed?
        %section.activities
          - recent_solutions.each do |solution|
            = render ViewComponents::Track::SolutionActivity.new(solution, user_track)
          = render ViewComponents::ProminentLink.new("See all #{track.title} exercises", track_exercise_path(track), with_bg: true)

      - else
        = render "tracks/show/joined/activities_zero_state_section"

    .rhs
      - if last_8_weeks_counts.any?(&:positive?)
        %section.weekly-count
          .text
            .count= (last_8_weeks_counts.sum / 8.0).round(1)
            %h3 Avg. exercises completed per week (last 8 weeks)

          = ReactComponents::Common::ProgressGraph.new(last_8_weeks_counts, 70, 145)

      - if user_track.num_completed_exercises.positive?
        = render "tracks/show/joined/stats_box_completed_exercises", track: track, user_track: user_track

      - if track.course? && !user_track.practice_mode?
        - if user_track.num_concepts_learnt.positive?
          = render "tracks/show/joined/stats_box_learnt_concepts", track: track, user_track: user_track
        - else
          = render "tracks/show/joined/stats_box_available_exercises", track: track, user_track: user_track

        - if user_track.num_concepts_mastered.positive?
          = render "tracks/show/joined/stats_box_mastered_concepts", track: track, user_track: user_track

      - else
        - if user_track.num_in_progress_exercises.positive?
          = render "tracks/show/joined/stats_box_in_progress_exercises", track: track, user_track: user_track

        - if user_track.num_available_exercises.positive?
          = render "tracks/show/joined/stats_box_available_exercises", track: track, user_track: user_track

      - unless user_track.num_completed_exercises.positive?
        = render "tracks/show/joined/stats_box_locked_exercises", track: track, user_track: user_track

      = render ViewComponents::ProminentLink.new("View #{track.title} Documentation", track_docs_path(track), with_bg: true, external: true)



