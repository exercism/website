{
  "title": "Word Count",
  "description": "Count the frequency of words in a sentence.",
  "level": 7,
  "idx": 3,
  "blocks_project_progression": false,
  "tests_type": "io",
  "stdlib_functions": ["join", "push", "has_key", "to_lower_case"],
  "tasks": [
    {
      "name": "Basic cases",
      "tests": [
        {
          "slug": "word-count-single-word",
          "description_html": "Count a single word.",
          "name": "Count one word",
          "function": "count_words",
          "params": ["word"],
          "expected": {
            "word": 1
          }
        },
        {
          "slug": "word-count-multiple-unique-words",
          "description_html": "Count one of each word in a sentence.",
          "name": "Count one of each word",
          "function": "count_words",
          "params": ["one of each"],
          "expected": {
            "one": 1,
            "of": 1,
            "each": 1
          }
        },
        {
          "slug": "word-count-multiple-occurrences",
          "description_html": "Count multiple occurrences of a word.",
          "name": "Multiple occurrences",
          "function": "count_words",
          "params": ["one fish two fish red fish blue fish"],
          "expected": {
            "one": 1,
            "fish": 4,
            "two": 1,
            "red": 1,
            "blue": 1
          }
        },
        {
          "slug": "word-count-cramped-list",
          "description_html": "Handle lists with cramped formatting.",
          "name": "Cramped list",
          "function": "count_words",
          "params": ["one,two,three"],
          "expected": {
            "one": 1,
            "two": 1,
            "three": 1
          }
        },
        {
          "slug": "word-count-ignore-punctuation",
          "description_html": "Ignore punctuation while counting words.",
          "name": "Ignore punctuation",
          "function": "count_words",
          "params": ["car: carpet as java: javascript!!&@$%^&"],
          "expected": {
            "car": 1,
            "carpet": 1,
            "as": 1,
            "java": 1,
            "javascript": 1
          }
        },
        {
          "slug": "word-count-include-numbers",
          "description_html": "Count words and include numbers.",
          "name": "Include numbers",
          "function": "count_words",
          "params": ["testing, 1, 2 testing"],
          "expected": {
            "testing": 2,
            "1": 1,
            "2": 1
          }
        }
      ]
    },
    {
      "name": "Case normalization",
      "tests": [
        {
          "slug": "word-count-normalize-case",
          "description_html": "Count words regardless of case.",
          "name": "Normalize case",
          "function": "count_words",
          "params": ["go Go GO Stop stop"],
          "expected": {
            "go": 3,
            "stop": 2
          }
        },
        {
          "slug": "word-count-with-apostrophes",
          "description_html": "Correctly handle words with apostrophes.",
          "name": "Words with apostrophes",
          "function": "count_words",
          "params": ["First: don't laugh. Then: don't cry."],
          "expected": {
            "first": 1,
            "don't": 2,
            "laugh": 1,
            "then": 1,
            "cry": 1
          }
        },
        {
          "slug": "word-count-multiple-spaces",
          "description_html": "Handle multiple spaces correctly.",
          "name": "Multiple spaces",
          "function": "count_words",
          "params": [" multiple   whitespaces"],
          "expected": {
            "multiple": 1,
            "whitespaces": 1
          }
        }
      ]
    }
  ]
}
