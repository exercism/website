# worker_processes  auto;
# worker_rlimit_nofile 8192; # 2x worker_connections
events {
  worker_connections 4096; # Default: 1024
}

http {
  map $upstream_http_cache_control $modified_cache_control {
      default "";
      ""      "";
      ~.      "$upstream_http_cache_control, no-transform";
  }

  # Set ip addresses
  set_real_ip_from 0.0.0.0/0;
  set_real_ip_from ::/0;

  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  # Logs
  log_format prod '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" '
                  'Auth:$http_authorization';
  access_log /var/log/nginx/access.log prod;


    gzip on;
    gzip_proxied any;
    gzip_min_length 48;
    gzip_vary on;
    gzip_comp_level 5;  # Balance between speed and compression (1â€“9)

  proxy_buffer_size 16k;
  proxy_busy_buffers_size 24k;
  proxy_buffers 64 4k;

  server {
    listen 80;

    location /cable {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|HEAD|OPTIONS)$) {

        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://127.0.0.1:3035;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }

    location / {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE|PATCH)$) {

        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://127.0.0.1:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      
      # Append no-transform to the Cache-Control header
      # to stop Cloudfront from dropping etags.
      proxy_hide_header Cache-Control;
      add_header Cache-Control $modified_cache_control always;

      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_cache_bypass $http_upgrade;
    }

    location /favicon.ico {
      log_not_found off;
      access_log off;
      return 404;
    }

    location /apple-touch-icon {
      log_not_found off;
      access_log off;
      return 404;
    }

    location ~ ^/tracks/.*/exercises/.*/solutions/.*\.jpg$ {
      return 301 https://assets.exercism.org$request_uri;
    }

    location ~ ^/profiles/.*\.jpg$ {
      return 301 https://assets.exercism.org$request_uri;
    }
  }

  server {
    server_name bootcamp.exercism.org;

    location ~* ^/bootcamp(/.*)?$ {
      # Capture the part of the URI after /bootcamp
      set $remaining_path $1;

      # Redirect to the new URL with the remaining path
      add_header Cache-Control "no-store" always;
      return 301 https://exercism.org/bootcamp$remaining_path;
    }

    location / {
      # Redirect to the desired URL with the remaining path
      add_header Cache-Control "no-store" always;
      return 301 https://exercism.org/bootcamp$request_uri;
    }
  }

  server {
    listen 80;
    server_name api.exercism.org api.exercism.io;

    location / {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE|PATCH)$) {

        return 405;
      }

      # Rewrite to go to api path
      rewrite /(.*) /api/$1 break;

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://127.0.0.1:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_cache_bypass $http_upgrade;
    }

    location /favicon.ico {
      log_not_found off;
      access_log off;
      return 404;
    }
    location /robots.txt {
      log_not_found off;
      access_log off;
      return 404;
    }
  }

  server {
    server_name www.exercism.org .exercism.io .exercism.net .exercism.com .exercism.lol;
    add_header Cache-Control "no-store" always;
    return 301 https://exercism.org$request_uri;
  }
}